name: "Test and Deploy"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  Test-and-Deploy:
    name: "Test and Deploy"
    runs-on: ubuntu-18.04
    defaults:
      run:
        working-directory: website
    steps:
      - uses: actions/checkout@v2
      - uses: lukka/get-cmake@latest

      - name: Install Qt
        run: |
          sudo add-apt-repository ppa:beineri/opt-qt-5.11.0-bionic -y
          sudo apt-get update -qq
          sudo apt-get -y install build-essential libgl1-mesa-dev xvfb qt511base \
                libssl-dev 
          source /opt/qt*/bin/qt*-env.sh || true

      - name: Install LibArchive
        run: |
          cd ..
          mkdir build
          cd build
          git clone https://github.com/libarchive/libarchive
          cd libarchive
          git checkout "v3.5.1"
          cmake .
          make -j$(nproc)
          sudo make install -j$(nproc)
          cd ..
          cd ..
          rm -rf build
          cd website
          sudo cp -fp /usr/local/lib/pkgconfig/libarchive.pc /usr/lib/pkgconfig/libarchive.pc
          sudo cp -fp /usr/local/lib/libarchive.* /usr/lib/

      - name: Run Unit Tests
        run: |
          Xvfb :100 -ac &
          export DISPLAY=:100.0
          cd ..
          mkdir build
          cd build
          source /opt/qt*/bin/qt*-env.sh || true
          cmake -DBUILD_TESTS=ON ..
          make -j$(nproc)
          ./tests/QArchiveTests
          cd ..
          rm -rf build
          cd website

      - name: Setup Node
        if: github.event_name != 'pull_request'
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Get yarn cache
        if: github.event_name != 'pull_request'
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache dependencies
        if: github.event_name != 'pull_request'
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-website-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-website-

      - run: yarn install --frozen-lockfile
        if: github.event_name != 'pull_request'
        
      - run: yarn build
        if: github.event_name != 'pull_request'
        
      - name: Deploy
        if: github.event_name != 'pull_request'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./website/build/QArchive
