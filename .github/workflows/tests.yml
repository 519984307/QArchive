name: Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  TestLinux:
    name: "QArchive Tests (GNU+Linux amd64)"
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: lukka/get-cmake@latest

      - name: Install Qt
        run: |
          sudo add-apt-repository ppa:beineri/opt-qt-5.11.0-bionic -y
          sudo apt-get update -qq
          sudo apt-get -y install build-essential libgl1-mesa-dev xvfb qt511base \
                libssl-dev 
          source /opt/qt*/bin/qt*-env.sh || true

      - name: Install LibArchive
        run: |
          mkdir build
          cd build
          git clone https://github.com/libarchive/libarchive
          cd libarchive
          git checkout "v3.5.1"
          cmake .
          make -j$(nproc)
          sudo make install -j$(nproc)
          cd ..
          cd ..
          rm -rf build
          sudo cp -fp /usr/local/lib/pkgconfig/libarchive.pc /usr/lib/pkgconfig/libarchive.pc
          sudo cp -fp /usr/local/lib/libarchive.* /usr/lib/

      - name: Run Tests
        run: |
          Xvfb :100 -ac &
          export DISPLAY=:100.0
          mkdir build
          cd build
          source /opt/qt*/bin/qt*-env.sh || true
          cmake ..
          make -j$(nproc)
          sudo make install
          cd ..
          rm -rf build
          cd tests
          mkdir build
          cd build
          cmake ..
          make -j$(nproc)
          ./QArchiveTests

  TestLinuxQt6:
    name: "Qt6 QArchive Tests (GNU+Linux amd64)"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - uses: lukka/get-cmake@latest

      - name: Install Qt
        run: |
          sudo add-apt-repository universe -y
          sudo apt-get update -qq
          sudo apt-get -y install build-essential libgl1-mesa-dev xvfb qt6-base-dev libssl-dev

      - name: Install LibArchive
        run: |
          mkdir build
          cd build
          git clone https://github.com/libarchive/libarchive
          cd libarchive
          git checkout "v3.5.1"
          cmake .
          make -j$(nproc)
          sudo make install -j$(nproc)
          cd ..
          cd ..
          rm -rf build
          sudo cp -fp /usr/local/lib/pkgconfig/libarchive.pc /usr/lib/pkgconfig/libarchive.pc
          sudo cp -fp /usr/local/lib/libarchive.* /usr/lib/

      - name: Run Tests
        run: |
          Xvfb :100 -ac &
          export DISPLAY=:100.0
          mkdir build
          cd build
          cmake ..
          make -j$(nproc)
          sudo make install
          cd ..
          rm -rf build
          cd tests
          mkdir build
          cd build
          cmake ..
          make -j$(nproc)
          ./QArchiveTests

  TestMacLegacy:
    name: "QArchive Tests (macOS x86_64 Legacy)"
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v3
      - uses: lukka/get-cmake@latest

      - name: Install Qt, LibArchive and pkg-config
        run: brew install qt@5 libarchive

      - name: Run Tests
        run: |
          mkdir build
          cd build
          export QT_DIR=$(brew --prefix qt@5)
          export Qt5_DIR=$(brew --prefix qt@5)
          cmake -DLIBARCHIVE_PKG_CONFIG=$(brew --prefix libarchive)/lib/pkgconfig/libarchive.pc .. 
          cmake --build . --config release
          cat QArchiveConfig.cmake
          sudo make install
          cd ..
          rm -rf build
          cd tests
          mkdir build
          cd build
          cmake ..
          cmake --build .
          ./QArchiveTests

  TestMacLatest:
    name: "QArchive Tests (macOS x86_64 Latest)"
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: lukka/get-cmake@latest

      - name: Install Qt and LibArchive
        run: brew install qt@5 libarchive

      - name: Run Tests
        run: |
          mkdir build
          cd build
          export QT_DIR=$(brew --prefix qt@5)
          export Qt5_DIR=$(brew --prefix qt@5)
          cmake  -DLibArchive_INCLUDE_DIR=$(brew --prefix libarchive)/include .. 
          cmake --build . --config release
          sudo make install
          cd ..
          rm -rf build
          cd tests
          mkdir build
          cd build
          cmake ..
          cmake --build .
          ./QArchiveTests
